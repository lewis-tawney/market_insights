---
globs: app/routes/**/*.py
description: API design and endpoint guidelines
---

# API Design Rules

## RESTful API Principles
- Use HTTP methods appropriately (GET, POST, PUT, DELETE)
- Design resource-based URLs
- Return appropriate HTTP status codes
- Use consistent response formats

## Endpoint Design
- Use descriptive, resource-based URLs
- Group related endpoints under common prefixes
- Use query parameters for filtering and pagination
- Implement proper error responses with meaningful messages

## Response Format
```python
# Success Response
{
    "data": {...},
    "status": "success",
    "message": "Operation completed successfully"
}

# Error Response
{
    "error": "Validation failed",
    "status": "error",
    "details": {...}
}
```

## Data Validation
- Use Pydantic models for request validation
- Validate all input parameters
- Return clear error messages for validation failures
- Handle type conversion and format validation

## Performance Considerations
- Implement caching for expensive operations
- Use async/await for I/O operations
- Implement pagination for large datasets
- Consider rate limiting for public endpoints

## Key API Modules
- [app/routes/api.py](mdc:app/routes/api.py) - Core API endpoints
- [app/routes/chart.py](mdc:app/routes/chart.py) - Chart data endpoints
- [app/routes/metrics.py](mdc:app/routes/metrics.py) - Metrics endpoints
- [app/routes/market_strength.py](mdc:app/routes/market_strength.py) - Market analysis endpoints
